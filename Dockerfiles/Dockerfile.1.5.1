### Churros: Docker image for ChIP-seq analysis
FROM rnakato/mapping:2024.10 AS base
LABEL maintainer="Ryuichiro Nakato <rnakato@iqb.u-tokyo.ac.jp>"

WORKDIR /opt
USER root

SHELL ["/bin/bash", "-c"]

RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        build-essential \
        fastqc \
        libboost-all-dev \
        libbz2-dev \
        libcurl4-gnutls-dev \
        libhts-dev \
        lld \
        lldb \
        libglpk-dev \
        libgtkmm-3.0-dev \
        libgzstream0 \
        libgzstream-dev \
        liblzma-dev \
        libz-dev \
        lmodern \
        cmake \
        curl \
        pandoc \
        pigz \
        python2 \
        texlive-fonts-recommended \
        texlive-xetex \
    && apt-get clean \
    && rm -rf /var/lib/apt/list

# R packages
# Use install_github to install fgsea due to the failure of BiocManager::install('fgsea')
ENV Ncpus=16
RUN R -e "install.packages('devtools')" \
    && R -e "devtools::install_github('ctlab/fgsea')" \
    && R -e "BiocManager::install(c('ATACseqQC', \
                                 'ChIPseeker', \
                                 'clusterProfiler', \
                                 'DESeq2', \
                                 'edgeR', \
                                 'Imetagene', \
                                 'MEDIPS', \
                                 'metagene', \
                                 'methylKit', \
                                 'motifbreakR', \
                                 'preprocessCore', \
                                 'rGREAT', \
                                 'Rsamtools', \
                                 'similaRpeak', \
                                 'TFBSTools', \
                                 'TxDb.Hsapiens.UCSC.hg19.knownGene', \
                                 'TxDb.Hsapiens.UCSC.hg38.knownGene', \
                                 'TxDb.Hsapiens.UCSC.mm10.knownGene', \
                                 'TxDb.Hsapiens.UCSC.mm39.knownGene'))" \
    && R -e "install.packages(c('snow', 'snowfall', 'bitops', 'caTools', 'VennDiagram'))"

# ChromHMM & ChromImpute
COPY ChromHMM.jar /opt/bin/ChromHMM.jar
COPY ChromImpute.jar /opt/bin/ChromImpute.jar

# fastp
COPY fastp /opt/bin/fastp

# TrimGalore v0.6.7
COPY TrimGalore-0.6.7.tar.gz TrimGalore-0.6.7.tar.gz
RUN tar zxvf TrimGalore-0.6.7.tar.gz \
    && rm TrimGalore-0.6.7.tar.gz

# STITCHIT: https://github.com/SchulzLab/STITCHIT
RUN git clone https://github.com/SchulzLab/STITCHIT.git \
    && mkdir -p STITCHIT/build \
    && cd STITCHIT/build \
    && cmake .. \
    && make

# STARE: https://stare.readthedocs.io/en/latest/index.html
RUN git clone https://github.com/SchulzLab/STARE.git \
    && cd STARE/Code \
    && cmake . \
    && cmake --build .

# abismal
COPY abismal-3.2.3.tar.gz abismal-3.2.3.tar.gz
RUN tar zxvf abismal-3.2.3.tar.gz \
    && cd abismal-3.2.3 \
    && mkdir build \
    && cd build \
    && ../configure --prefix=/opt/abismal \
    && make \
    && make install \
    && rm -rf /opt/abismal-3.2.3 /opt/abismal-3.2.3.tar.gz

# methpipe
COPY methpipe-5.0.0.tar.gz methpipe-5.0.0.tar.gz
RUN tar zxvf methpipe-5.0.0.tar.gz \
    && cd methpipe-5.0.0 \
    && mkdir build \
    && cd build \
    && ../configure --prefix=/opt/methpipe \
    && make \
    && make install \
    && rm -rf /opt/methpipe-5.0.0 /opt/methpipe-5.0.0.tar.gz

# DROMPAplus
RUN git clone --recursive https://github.com/rnakato/DROMPAplus \
    && cd DROMPAplus \
    && git submodule foreach git pull origin master \
    && make

# Python (MultiQC, deepTools, intervene, TOBIAS, genmap, sambamba)
# RGTはvery old libpng12を使おうとするので却下
# Fix Error while loading conda entry point: conda-libmamba-solver (libarchive.so.19: cannot open shared object file: No such file or directory)
# https://stackoverflow.com/questions/77617946/solve-conda-libmamba-solver-libarchive-so-19-error-after-updating-conda-to-23
COPY env.yaml /opt/env.yaml
RUN eval "$(micromamba shell hook --shell bash)" \
    && micromamba activate base \
    && micromamba install -y -f /opt/env.yaml \
    && micromamba clean --all --yes \
    && rm /opt/env.yaml

# scripts
COPY Churros /opt/Churros
RUN chmod a+x /opt/Churros/* /opt/bin/*
# MOSAiCS
RUN make -C /opt/Churros/MOSAiCS_mappability/

COPY rose /opt/ROSE

FROM rnakato/mapping:2024.10
COPY --from=base / /
COPY --from=rnakato/homer:20.04 /opt/HOMER /opt/HOMER
LABEL maintainer="Ryuichiro Nakato <rnakato@iqb.u-tokyo.ac.jp>"

ENV PYTHONPATH=$PYTHONPATH:/opt/ROSE/
ENV PATH=${PATH}:/opt/scripts:/opt/Churros:/opt/SSP/bin:/opt/DROMPAplus/bin:/opt/DROMPAplus/submodules/cpdf/Linux-Intel-64bit:/opt/DROMPAplus/otherbins:/opt/bin:/opt/bwa-0.7.17:/opt/bowtie-1.3.1-linux-x86_64:/opt/bowtie2-2.4.5-linux-x86_64:/opt/HOMER/bin/:/opt/ROSE/:/opt/TrimGalore-0.6.7/:/opt/STITCHIT/build/core:/opt/abismal/bin:/opt/methpipe/bin

USER ubuntu
WORKDIR /home/ubuntu
ENTRYPOINT ["/entrypoint.sh"]
CMD ["churros"]
